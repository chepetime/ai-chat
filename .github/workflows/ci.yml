name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: ./.github/actions/setup
        with:
          enable-corepack: true

      - name: Run Lint
        run: pnpm lint

  build:
    needs: [lint]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_chatbot
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      minio:
        image: minio/minio
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --command server /data

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: ./.github/actions/setup
        with:
          enable-corepack: true

      - name: Wait for Services
        run: |
          echo "Waiting for PostgreSQL and MinIO to be ready..."
          for i in {1..10}; do
            nc -z localhost 5432 && nc -z localhost 9000 && break
            echo "Services not ready yet. Retrying in 5 seconds..."
            sleep 5
          done

      - name: Run Build
        env:
          POSTGRES_URL: postgres://postgres:postgres@localhost:5432/ai_chatbot
          MINIO_ENDPOINT: localhost
          MINIO_PORT: 9000
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
          MINIO_BUCKET: my-app-bucket
        run: pnpm build

  notify:
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Send Notification
        run: |
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ Build succeeded!"
          else
            echo "❌ Build failed!"
            exit 1
          fi