name: Set up
description: Node.js LTS, store cache, and install dependencies

inputs:
  enable-corepack:
    description: 'Enable corepack'
    required: false
    default: 'false'
  cwd:
    description: "Changes node's process.cwd() if the project is not located on the root. Default to process.cwd()"
    required: false
    default: '.'

runs:
  using: composite
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: 'pnpm' # Enable built-in node module caching

    - name: ⚙️ Enable Corepack
      if: ${{ inputs.enable-corepack == 'true' }}
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        corepack enable
        echo "corepack enabled"

    - uses: pnpm/action-setup@v2.2.4
      if: ${{ inputs.enable-corepack == 'false' }}
      with:
        run_install: false

    - name: Expose pnpm config(s) through "$GITHUB_OUTPUT"
      id: pnpm-config
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache rotation keys
      id: cache-rotation
      shell: bash
      run: |
        echo "YEAR_MONTH=$(date -u '+%Y%m')" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

    # Add build cache
    - uses: actions/cache@v4
      name: Cache build output
      with:
        path: |
          .next
          dist
          build
        key: ${{ runner.os }}-build-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        echo "//registry.npmjs.org/:always-auth=false" > .npmrc
        pnpm install --frozen-lockfile --prefer-offline
      env:
        HUSKY: '0'